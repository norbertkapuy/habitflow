

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: habitflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: habitflow
      POSTGRES_USER: habitflow_user
      POSTGRES_PASSWORD: habitflow_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - habitflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habitflow_user -d habitflow && psql -U habitflow_user -d habitflow -c 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: habitflow-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: habitflow
      DB_USER: habitflow_user
      DB_PASSWORD: habitflow_password
      FRONTEND_URL: http://localhost:80
    ports:
      - "3001:3001"
    networks:
      - habitflow-network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Build
  frontend-build:
    image: node:18-alpine
    container_name: habitflow-frontend-build
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - frontend_build:/shared/html
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    command: sh -c "npm ci && npm run build && cp -r out/* /shared/html/"
    networks:
      - habitflow-network

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: habitflow-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - frontend_build:/shared/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - habitflow-network
    depends_on:
      frontend-build:
        condition: service_completed_successfully
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and sessions - optional)
  redis:
    image: redis:7-alpine
    container_name: habitflow-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - habitflow-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  frontend_build:
    driver: local
  redis_data:
    driver: local

networks:
  habitflow-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 